# import matplotlib.pyplot as plt

# if TESTING:
#   fn = np.cos(gll_latlon[:, :, :, 1]) * np.cos(gll_latlon[:, :, :, 0])
#   df_dab = np.zeros((gll_latlon.shape[0], npt, npt, 2))
#   df_dab[:, :, :, 0] = np.einsum("fij,ki->fkj", fn, deriv)
#   df_dab[:, :, :, 1] = np.einsum("fij,kj->fik", fn, deriv)
#   dlatlon_dab = np.zeros((gll_latlon.shape[0], npt, npt, 2, 2))
#   dlatlon_dab[:, :, :, 0] = np.einsum("fijs,ki->fjks", gll_latlon, deriv)
#   dlatlon_dab[:, :, :, 1] = np.einsum("fijs,kj->fiks", gll_latlon, deriv)


#   df_dcart = np.einsum("fijg,fijgp->fijp",df_dab, gll_to_cube_jacobian_inv)
#   df_dlatlon = np.einsum("fijg,fijgs->fijs", df_dab, gll_to_sphere_jacobian_inv)#*(g_weights[np.newaxis, :, np.newaxis, np.newaxis])
#   df_dlatlon[:,:,:,0] = dss_scalar(df_dlatlon[:,:,:,0])
#   df_dlatlon[:,:,:,1] = dss_scalar(df_dlatlon[:,:,:,1])
#   dlatlon_dcart = np.einsum("fijgs,fijgp->fijps", dlatlon_dab, gll_to_cube_jacobian_inv)
#   #print(np.max(np.abs(dlatlon_dcart - cube_to_sphere_jacobian)))
#   print(f"computational derivative vs analytical jacobian: {np.max(dlatlon_dcart - cube_to_sphere_jacobian)}")

#   df_dlat = -np.cos(gll_latlon[:, :, :, 1]) * np.sin(gll_latlon[:, :, :, 0])
#   df_dlon = -np.sin(gll_latlon[:, :, :, 1])

#   #print(f"max df_dx_error: {np.max(np.abs(df_dcart[:, :, :, 0] - df_dx))} max df_dy_error: {np.max(np.abs(df_dcart[:, :, :, 1] - df_dy))} max df_dz_error: {np.max(np.abs(df_dcart[:, :, :, 2] - df_dz))}")
#   print(f"max df_dlat error: {np.max(np.abs(df_dlatlon[:, :, :, 0] - df_dlat))} max df_dlon_error: {np.max(np.abs(df_dlatlon[:, :, :, 1] - df_dlon))}")
#   print(f"min df_dlat error: {np.min(np.abs(df_dlatlon[:, :, :, 0] - df_dlat))} min df_dlon_error: {np.min(np.abs(df_dlatlon[:, :, :, 1] - df_dlon))}")
#   print(df_dcart.shape)
#   print(df_dlatlon.shape)

# i_plot = np.arange(0, npt).reshape((1, -1, 1)) * np.ones_like(gll_latlon[:, :, :, 0])
# j_plot = np.arange(0, npt).reshape((1, 1, -1)) * np.ones_like(gll_latlon[:, :, :, 0])
# st = 0
# nd = 4
# cmap="jet"
# if TESTING:
#   start_i = st
#   end_i = nd
#   start_j = st
#   end_j = nd
#   plt.figure()
#   plt.title("f")
#   plt.scatter(gll_latlon[:, start_i:end_i, start_j:end_j, 1].flatten(), gll_latlon[:, start_i:end_i, start_j:end_j, 0].flatten(), c=(fn[:, start_i:end_i, start_j:end_j]).flatten(), cmap="jet")
#   plt.colorbar()
#   plt.show()
#   plt.figure()
#   plt.title("df_da")
#   plt.scatter(gll_latlon[:, start_i:end_i, start_j:end_j, 1].flatten(), gll_latlon[:, start_i:end_i, start_j:end_j, 0].flatten(), c=(df_dab[:, start_i:end_i, start_j:end_j, 0]).flatten(), alpha=0.5, s=np.random.uniform(size=gll_latlon[:, start_i:end_i, start_j:end_j, 1].size, high=50, low=10), cmap=cmap)
#   plt.colorbar()
#   plt.show()
#   plt.figure()
#   plt.title("df_db")
#   plt.scatter(gll_latlon[:, start_i:end_i, start_j:end_j, 1].flatten(), gll_latlon[:, start_i:end_i, start_j:end_j, 0].flatten(), c=(df_dab[:, start_i:end_i, start_j:end_j, 0]).flatten(), alpha=0.5, s=np.random.uniform(size=gll_latlon[:, start_i:end_i, start_j:end_j, 1].size, high=50, low=10), cmap=cmap)
#   plt.colorbar()
#   plt.show()
#   plt.figure()
#   plt.title("df_dlat")
#   plt.scatter(gll_latlon[:, start_i:end_i, start_j:end_j, 1].flatten(), gll_latlon[:, start_i:end_i, start_j:end_j, 0].flatten(), c=(df_dlatlon[:, start_i:end_i, start_j:end_j, 0]).flatten(), alpha=0.5, s=np.random.uniform(size=gll_latlon[:, start_i:end_i, start_j:end_j, 1].size, high=50, low=10), cmap=cmap)
#   plt.colorbar()
#   plt.show()
#   plt.figure()
#   plt.title("df_dlat_analytic")
#   plt.scatter(gll_latlon[:, start_i:end_i, start_j:end_j, 1].flatten(), gll_latlon[:, start_i:end_i, start_j:end_j, 0].flatten(), c=(df_dlat[:, start_i:end_i, start_j:end_j]).flatten(), alpha=0.5, s=np.random.uniform(size=gll_latlon[:, start_i:end_i, start_j:end_j, 1].size, high=50, low=10), cmap=cmap)
#   plt.colorbar()
#   plt.show()
#   plt.figure()
#   plt.title("df_dlon")
#   plt.scatter(gll_latlon[:, start_i:end_i, start_j:end_j, 1].flatten(), gll_latlon[:, start_i:end_i, start_j:end_j, 0].flatten(), c=(df_dlatlon[:, start_i:end_i, start_j:end_j, 1]).flatten(), alpha=0.5, s=np.random.uniform(size=gll_latlon[:, start_i:end_i, start_j:end_j, 1].size, high=50, low=10), cmap=cmap)
#   plt.colorbar()
#   plt.show()
#   plt.figure()
#   plt.title("df_dlon_analytic")
#   plt.scatter(gll_latlon[:, start_i:end_i, start_j:end_j, 1].flatten(), gll_latlon[:, start_i:end_i, start_j:end_j, 0].flatten(), c=(df_dlon[:, start_i:end_i, start_j:end_j]).flatten(), alpha=0.5, s=np.random.uniform(size=gll_latlon[:, start_i:end_i, start_j:end_j, 1].size, high=50, low=10), cmap=cmap)
#   plt.colorbar()
#   plt.show()
#   plt.figure()
#   plt.title("vort grad f")
#   plt.scatter(gll_latlon[:, start_i:end_i, start_j:end_j, 1].flatten(), gll_latlon[:, start_i:end_i, start_j:end_j, 0].flatten(), c=(vort[:, start_i:end_i, start_j:end_j]).flatten(), alpha=0.5, s=np.random.uniform(size=gll_latlon[:, start_i:end_i, start_j:end_j, 1].size, high=50, low=10), cmap=cmap)
#   plt.colorbar()
#   plt.show()

#   plt.title("log lat err")
#   plt.scatter(gll_latlon[:, start_i:end_i, start_j:end_j, 1].flatten(), gll_latlon[:, start_i:end_i, start_j:end_j, 0].flatten(), c=np.log(np.abs((df_dlatlon[:, start_i:end_i, start_j:end_j, 0]-df_dlat[:, start_i:end_i, start_j:end_j]).flatten())), alpha=0.5, s=np.random.uniform(size=gll_latlon[:, start_i:end_i, start_j:end_j, 1].size, high=50, low=10), cmap=cmap)
#   plt.colorbar()
#   plt.show()
#   plt.figure()
#   plt.title("log lon err")
#   plt.scatter(gll_latlon[:, start_i:end_i, start_j:end_j, 1].flatten(), gll_latlon[:, start_i:end_i, start_j:end_j, 0].flatten(), c=np.log(np.abs((df_dlatlon[:, start_i:end_i, start_j:end_j, 1]-df_dlon[:, start_i:end_i, start_j:end_j]).flatten())), alpha=0.5, s=np.random.uniform(size=gll_latlon[:, start_i:end_i, start_j:end_j, 1].size, high=50, low=10), cmap=cmap)
#   plt.colorbar()
#   plt.show()
#   plt.title("lat err")
#   plt.scatter(gll_latlon[:, start_i:end_i, start_j:end_j, 1].flatten(), gll_latlon[:, start_i:end_i, start_j:end_j, 0].flatten(), c=(df_dlatlon[:, start_i:end_i, start_j:end_j, 0]-df_dlat[:, start_i:end_i, start_j:end_j]).flatten(), alpha=0.5, s=np.random.uniform(size=gll_latlon[:, start_i:end_i, start_j:end_j, 1].size, high=50, low=10), cmap=cmap)
#   plt.colorbar()
#   plt.show()
#   plt.figure()
#   plt.title("lon err")
#   plt.scatter(gll_latlon[:, start_i:end_i, start_j:end_j, 1].flatten(), gll_latlon[:, start_i:end_i, start_j:end_j, 0].flatten(), c=(df_dlatlon[:, start_i:end_i, start_j:end_j, 1]-df_dlon[:, start_i:end_i, start_j:end_j]).flatten(), alpha=0.5, s=np.random.uniform(size=gll_latlon[:, start_i:end_i, start_j:end_j, 1].size, high=50, low=10), cmap=cmap)
#   plt.colorbar()

